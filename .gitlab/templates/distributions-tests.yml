################################################################
########### Build all cases on various distributions ###########
################################################################

# Test on Mac OS 10.14.6
Build on macOS 10.14.6:
  stage:  test-distributions
  tags:
    - macos
  variables:
    OS: "macOS"
  needs: []
  before_script:
    - echo "==================== [${OS}] Install Python dependencies ===================="
    - python --version
    - pip --version
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
    - export PYTHONPATH=$(pwd)/venv/lib/python3.7/site-packages:$PYTHONPATH
    - echo "==================== [${OS}] Check Python dependencies ===================="
    - python --version
    - python .gitlab/ci/TestImport.py
  script:
    - echo "==================== [${OS}] Test ARG ===================="
    - pwd
    - cd tests
    - echo "---------- [${OS}] Run build tests ----------"
    - cd ${BUILD_TESTS}
    - python test.py
    - cd ..
    - echo "---------- [${OS}] Run GUI tests ----------"
    - cd ..
    - export PYTHONPATH=${PYTHONPATH}
    - echo $PYTHONPATH
    - python -m tests.GUI_tests.all_gui_tests
    - echo "==================== [${OS}] Arrange artifacts ===================="
    - mkdir -p tests/${OS}/${BUILD_TESTS}/ tests/${OS}/${GUI_TESTS}/integrationtests tests/${OS}/${GUI_TESTS}/GUI_unittests
    - cp -r tests/${BUILD_TESTS}/${BUILD_TESTS}-* tests/${OS}/${BUILD_TESTS}/
    - cp -r tests/${BUILD_TESTS}/*/${BUILD_TESTS}-*/ tests/${OS}/${BUILD_TESTS}/
    - cp -r tests/${GUI_TESTS}/integrationtests/GUI_integrationtests tests/${OS}/${GUI_TESTS}/integrationtests
    - cp -r tests/${GUI_TESTS}/GUI_unittests tests/${OS}/${GUI_TESTS}/GUI_unittests
  artifacts:
    expire_in: 1 week
    expose_as: "Distribution build on macOS"
    paths:
      - tests/macOS/

# Test on Ubuntu:latest
Build on Ubuntu latest Docker image:
  image: nganalytics/nga:ubuntu
  stage: test-distributions
  variables:
    OS: "Ubuntu"
  needs: []
  before_script:
    - echo "==================== [${OS}] Install Python dependencies ===================="
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
    - echo "==================== [${OS}] Export Python path ===================="
    - export PYTHONPATH=$(pwd)/venv/lib/python3.8/site-packages
    - echo $PYTHONPATH
    - echo "==================== [${OS}] Check Python dependencies ===================="
    - python --version
    - python .gitlab/ci/TestImport.py
    - export DISPLAY=:99.0
    - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
  script:
    - echo "==================== [${OS}] Test ARG ===================="
    - pwd
    - cd tests
    - echo "---------- [${OS}] Run build tests ----------"
    - cd ${BUILD_TESTS}
    - python test.py
    - cd ..
    - echo "---------- [${OS}] Run GUI tests ----------"
    - cd ..
    - export PYTHONPATH=${PYTHONPATH}
    - echo $PYTHONPATH
    - python -m tests.GUI_tests.all_gui_tests
    - echo "==================== [${OS}] Arrange artifacts ===================="
    - mkdir -p tests/${OS}/${BUILD_TESTS}/ tests/${OS}/${GUI_TESTS}/integrationtests tests/${OS}/${GUI_TESTS}/GUI_unittests
    - cp -r tests/${BUILD_TESTS}/${BUILD_TESTS}-* tests/${OS}/${BUILD_TESTS}/
    - cp -r tests/${BUILD_TESTS}/*/${BUILD_TESTS}-*/ tests/${OS}/${BUILD_TESTS}/
    - cp -r tests/${GUI_TESTS}/integrationtests/GUI_integrationtests tests/${OS}/${GUI_TESTS}/integrationtests
    - cp -r tests/${GUI_TESTS}/GUI_unittests tests/${OS}/${GUI_TESTS}/GUI_unittests
  artifacts:
    expire_in: 1 week
    expose_as: "Distribution build on Ubuntu"
    paths:
      - tests/Ubuntu/

# Test on Debian:latest
Build on Debian latest Docker image:
  image: nganalytics/nga:debian
  stage: test-distributions
  variables:
    OS: "Debian"
  needs: []
  before_script:
    - echo "==================== [${OS}] Install Python dependencies ===================="
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
    - echo "==================== [${OS}] Export Python path ===================="
    - export PYTHONPATH=$(pwd)/venv/lib/python3.8/site-packages
    - echo $PYTHONPATH
    - echo "==================== [${OS}] Check Python dependencies ===================="
    - python --version
    - python .gitlab/ci/TestImport.py
    - export DISPLAY=:99.0
    - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
  script:
    - echo "==================== [${OS}] Test ARG ===================="
    - pwd
    - cd tests
    - echo "---------- [${OS}] Run build tests ----------"
    - cd ${BUILD_TESTS}
    - python test.py
    - cd ..
    - echo "---------- [${OS}] Run GUI tests ----------"
    - cd ..
    - export PYTHONPATH=${PYTHONPATH}
    - echo $PYTHONPATH
    - python -m tests.GUI_tests.all_gui_tests
    - echo "==================== [${OS}] Arrange artifacts ===================="
    - mkdir -p tests/${OS}/${BUILD_TESTS}/ tests/${OS}/${GUI_TESTS}/integrationtests tests/${OS}/${GUI_TESTS}/GUI_unittests
    - cp -r tests/${BUILD_TESTS}/${BUILD_TESTS}-* tests/${OS}/${BUILD_TESTS}/
    - cp -r tests/${BUILD_TESTS}/*/${BUILD_TESTS}-*/ tests/${OS}/${BUILD_TESTS}/
    - cp -r tests/${GUI_TESTS}/integrationtests/GUI_integrationtests tests/${OS}/${GUI_TESTS}/integrationtests
    - cp -r tests/${GUI_TESTS}/GUI_unittests tests/${OS}/${GUI_TESTS}/GUI_unittests
  artifacts:
    expire_in: 1 week
    expose_as: "Distribution build on Debian"
    paths:
      - tests/Debian/

# Test on fedora:latest
Build on fedora latest Docker image:
  image: nganalytics/nga:fedora
  stage: test-distributions
  variables:
    OS: "fedora"
  needs: []
  before_script:
    - echo "==================== [${OS}] Install Python dependencies ===================="
    - virtualenv venv
    - source $(pwd)/venv/bin/activate
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - echo "==================== [${OS}] Export Python path ===================="
    - export PYTHONPATH=$(pwd)/venv/lib/python3.8/site-packages
    - echo $PYTHONPATH
    - echo "==================== [${OS}] Check Python dependencies ===================="
    - python --version
    - python .gitlab/ci/TestImport.py
    - export DISPLAY=:99.0
    - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
  script:
    - echo "==================== [${OS}] Test ARG ===================="
    - pwd
    - cd tests
    - echo "---------- [${OS}] Run build tests ----------"
    - cd ${BUILD_TESTS}
    - python test.py
    - cd ..
    - echo "---------- [${OS}] Run GUI tests ----------"
    - cd ..
    - export PYTHONPATH=${PYTHONPATH}
    - echo $PYTHONPATH
    - python -m tests.GUI_tests.all_gui_tests
    - echo "==================== [${OS}] Arrange artifacts ===================="
    - mkdir -p tests/${OS}/${BUILD_TESTS}/ tests/${OS}/${GUI_TESTS}/integrationtests tests/${OS}/${GUI_TESTS}/GUI_unittests
    - cp -r tests/${BUILD_TESTS}/${BUILD_TESTS}-* tests/${OS}/${BUILD_TESTS}/
    - cp -r tests/${BUILD_TESTS}/*/${BUILD_TESTS}-*/ tests/${OS}/${BUILD_TESTS}/
    - cp -r tests/${GUI_TESTS}/integrationtests/GUI_integrationtests tests/${OS}/${GUI_TESTS}/integrationtests
    - cp -r tests/${GUI_TESTS}/GUI_unittests tests/${OS}/${GUI_TESTS}/GUI_unittests
  artifacts:
    expire_in: 1 week
    expose_as: "Distribution build on fedora"
    paths:
      - tests/fedora/

# Test on CentOS:latest
Build on CentOS latest Docker image:
  image: nganalytics/nga:centos
  stage: test-distributions
  variables:
    OS: "CentOS"
  needs: []
  before_script:
    - echo "==================== [${OS}] Install Python dependencies ===================="
    - virtualenv venv
    - source $(pwd)/venv/bin/activate
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - echo "==================== [${OS}] Export Python path ===================="
    - export PYTHONPATH=$(pwd)/venv/lib/python3.8/site-packages
    - echo $PYTHONPATH
    - echo "==================== [${OS}] Check Python dependencies ===================="
    - python --version
    - python .gitlab/ci/TestImport.py
    - /usr/bin/Xvfb :99 -screen 0 1280x1024x24&
    - export DISPLAY=:99.0
    - export MESA_GL_VERSION_OVERRIDE=3.2
  script:
    - echo "==================== [${OS}] Test ARG ===================="
    - pwd
    - cd tests
    - echo "---------- [${OS}] Run build tests ----------"
    - cd ${BUILD_TESTS}
    - python test.py
    - cd ..
    - echo "---------- [${OS}] Run GUI tests ----------"
    - cd ..
    - export PYTHONPATH=${PYTHONPATH}
    - echo $PYTHONPATH
    - python -m tests.GUI_tests.all_gui_tests
    - echo "==================== [${OS}] Arrange artifacts ===================="
    - mkdir -p tests/${OS}/${BUILD_TESTS}/ tests/${OS}/${GUI_TESTS}/integrationtests tests/${OS}/${GUI_TESTS}/GUI_unittests
    - cp -r tests/${BUILD_TESTS}/${BUILD_TESTS}-* tests/${OS}/${BUILD_TESTS}/
    - cp -r tests/${BUILD_TESTS}/*/${BUILD_TESTS}-*/ tests/${OS}/${BUILD_TESTS}/
    - cp -r tests/${GUI_TESTS}/integrationtests/GUI_integrationtests tests/${OS}/${GUI_TESTS}/integrationtests
    - cp -r tests/${GUI_TESTS}/GUI_unittests tests/${OS}/${GUI_TESTS}/GUI_unittests
  artifacts:
    expire_in: 1 week
    expose_as: "Distribution build on CentOS"
    paths:
      - tests/CentOS/

###########################
###### Deploy stage #######
###########################

############# Gitlab.com Pypi Repository ############

#Deploy pyARG-dep in Gitlab.com
Upload pyARG-dep in Gitlab.com:
  image: python:slim-buster
  stage: deploy
  needs:
    - job: "Package pyARG-dep"
      artifacts: True
  variables:
    DEPLOYMENT_PYPI_SRC: ".gitlab/deployment/pypi/pyARG-dep"
    PACKAGING_PATH: "package-pyARG-dep"
  before_script:
    - echo "========== [pyARG-dep deployment] Get pypi dependencies ==========="
    - pip install --upgrade pip
    - pip install twine
  script:
    - echo "==================== [pyARG-dep deployment] Upload pyARG ==================="
    - twine upload --repository-url https://gitlab.com/api/v4/projects/18732201/packages/pypi --username $GITLAB_PYPI_USER --password $GITLAB_PYPI_PASS $PACKAGING_PATH/dist/*
  rules:
#   Always run when pushing a release candidate
    - if: $CI_COMMIT_REF_NAME =~ /^\d{1,}\.\d{1,}\.\d{1,}-RC\d{1,}/
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'
      changes:
        - .gitlab/deployment/pypi/pyARG-dep/*
        - requirements.txt

#Deploy pyARG in Gitlab.com
Upload pyARG in Gitlab.com:
  image: python:slim-buster
  stage: deploy
  needs:
    - job: "Package pyARG"
      artifacts: True
  variables:
    PACKAGING_PATH: "package"
  before_script:
    - echo "========== [pyARG deployment] Get pypi dependencies ==========="
    - pip install --upgrade pip
    - pip install twine
  script:
    - echo "==================== [pyARG deployment] Upload pyARG ==================="
    - twine upload --repository-url https://gitlab.com/api/v4/projects/18732201/packages/pypi --username $GITLAB_PYPI_USER --password $GITLAB_PYPI_PASS $PACKAGING_PATH/dist/*
    # Try to install pyARG from gitlab packages
    #- pip install --index-url https://gitlab.com/api/v4/projects/18732201/packages/ pyARG==1.0.1
    #- python -c "import arg"
    #- pip uninstall pyARG -y
  rules:
#   Always run when pushing a release candidate
    - if: $CI_COMMIT_REF_NAME =~ /^\d{1,}\.\d{1,}\.\d{1,}-RC\d{1,}/
    - if: $CI_COMMIT_TAG


############# Official Pypi Repository ############

#Deploy pyARG-dep in pypi.org
Upload pyARG-dep in pypi.org:
  image: python:slim-buster
  stage: deploy
  needs:
    - job: "Package pyARG-dep"
      artifacts: True
  variables:
    DEPLOYMENT_PYPI_SRC: ".gitlab/deployment/pypi/pyARG-dep"
    PACKAGING_PATH: "package-pyARG-dep"
  before_script:
    - echo "========== [pyARG-dep deployment] Get pypi dependencies ==========="
    - pip install --upgrade pip
    - pip install --upgrade twine
  script:
    - echo "========= [pyARG-dep deployment] Upload pyARG-dep on pypi.org/legacy ==========="
    - ls -al
    - ls -al $PACKAGING_PATH/dist/*
    - twine upload --repository-url https://upload.pypi.org/legacy/ --username $TWINE_USERNAME --password $TWINE_PASSWORD $PACKAGING_PATH/dist/* --skip-existing --verbose
    - pip install pyARG-dep
    - pip uninstall pyARG-dep -y
  rules:
#   Always run when pushing a release candidate
    - if: $CI_COMMIT_REF_NAME =~ /^\d{1,}\.\d{1,}\.\d{1,}-RC\d{1,}/
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'
      changes:
        - .gitlab/deployment/pypi/pyARG-dep/*
        - requirements.txt
      when: manual
      allow_failure: true

#Deploy pyARG in pypi.org
Upload pyARG in pypi.org:
  image: python:slim-buster
  stage: deploy
  needs:
    - job: "Package pyARG"
      artifacts: True
  variables:
    PACKAGING_PATH: "package"
  before_script:
    - echo "========== [pyARG deployment] Get pypi dependencies ==========="
    - pip install --upgrade pip
    - pip install --upgrade twine
  script:
    - echo "========= [pyARG deployment] Upload pyARG on pypi.org/legacy ==========="
    - twine upload --repository-url https://upload.pypi.org/legacy/ --username $TWINE_USERNAME --password $TWINE_PASSWORD $PACKAGING_PATH/dist/* --skip-existing
    - pip install pyARG
    - python -c "import arg"
    - pip uninstall pyARG -y
  rules:
#   Always run when pushing a release candidate
    - if: $CI_COMMIT_REF_NAME =~ /^\d{1,}\.\d{1,}\.\d{1,}-RC\d{1,}/
    - if: $CI_COMMIT_TAG
      when: manual
      allow_failure: true

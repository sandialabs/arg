###############################################################
########### Build all cases on prepared environment ###########
###############################################################

# Job templates to build all individual tests
.tpl_build_individual_test: &build_ind_test
  image: nganalytics/nga:build-test
  stage: build-individual-test
  needs: []
  extends:
    - .with_python_cache
  before_script: # Loading python virtualenv and workaround vtk no X server bug
    - echo "==================== [${BUILD_TEST_NAME}] Activate virtualenv ===================="
    - virtualenv venv
    - source venv/bin/activate
    - export PYTHONPATH=$(pwd)/venv/lib/python3.8/site-packages
    - echo $PYTHONPATH
    - pip install -r requirements.txt
    - echo "==================== [${BUILD_TEST_NAME}] Check Python dependencies ===================="
    - python --version
    - python utils/TestImport.py
    - export DISPLAY=:99.0
    - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
  script:
    - echo "==================== [${BUILD_TEST_NAME}] Build reports ===================="
    - cd ${BUILD_TEST_PATH}
    - python -c "import test; import os; caseName = os.environ.get('BUILD_TEST_NAME') if 'BUILD_TEST_NAME' in os.environ else ''; caseRunType = os.environ.get('BUILD_TEST_RUNTYPE') if 'BUILD_TEST_RUNTYPE' in os.environ else ''; print(caseName);print(caseRunType); test.build_all(test.machine, caseName, caseRunType, test.reportTypes, test.backendTypes)"
    - echo "==================== [${BUILD_TEST_NAME}] Check for errors ===================="
    - if [ -s $ERR_PDF_FILE ]; then echo "---------- Errors when building PDF REPORT ----------" && cat $ERR_PDF_FILE && exit 1; else echo "---------- No errors when building PDF REPORT ----------"; fi
    - if [ -s $ERR_DOCX_FILE ]; then echo "---------- Errors when building DOCX REPORT ----------" && cat $ERR_DOCX_FILE && exit 1; else echo "---------- No errors when building DOCX REPORT ----------"; fi
    - cd ..
    - echo "==================== [${BUILD_TEST_NAME}] Arrange artifacts ===================="
    - mkdir -p ${DEFAULT_OS}/${BUILD_TESTS}/${BUILD_TEST_NAME}/
    - cp -r ${BUILD_TESTS}/${BUILD_TEST_NAME}/${BUILD_TESTS}-*/ ${DEFAULT_OS}/${BUILD_TESTS}/${BUILD_TEST_NAME}/
  artifacts:
    expire_in: 7 days
    expose_as: "Individual builds on Debian"
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - tests/${DEFAULT_OS}/${BUILD_TESTS}/${BUILD_TEST_NAME}/
  rules:
#   Always run when pushing a release candidate
    - if: $CI_COMMIT_REF_NAME =~ /^\d{1,}\.\d{1,}\.\d{1,}-RC\d{1,}/
    - changes:
      - arg/Aggregation/*
      - arg/Applications/*
      - arg/Backend/*
      - arg/Common/*
      - arg/DataInterface/*
      - arg/Generation/*
      - arg/Tools/*
      - arg/__init__.py
      - arg/__version__.py
      - tests/build_tests/**/*
      - .gitlab/**/*
      - utils/**/*

# 'can' case build variables
Build 'can' case:
  variables:
    BUILD_TEST_NAME: "can"
    BUILD_TEST_RUNTYPE: "-g"
  <<: *build_ind_test

# 'color_tables' case build variables
Build 'color_tables' case:
  variables:
    BUILD_TEST_NAME: "color_tables"
    BUILD_TEST_RUNTYPE: "-g"
  <<: *build_ind_test

# 'crush' case build variables
Build 'crush' case:
  variables:
    BUILD_TEST_NAME: "crush"
    BUILD_TEST_RUNTYPE: "-e"
  <<: *build_ind_test

# 'crush-E' case build variables
Build 'crush-E' case:
  variables:
    BUILD_TEST_NAME: "crush-E"
    BUILD_TEST_RUNTYPE: "-E"
  <<: *build_ind_test

# 'disk' case build variables
Build 'disk' case:
  variables:
    BUILD_TEST_NAME: "disk"
    BUILD_TEST_RUNTYPE: "-g"
  <<: *build_ind_test

# 'hello_world' case build variables
Build 'hello_world' case:
  variables:
    BUILD_TEST_NAME: "hello_world"
    BUILD_TEST_RUNTYPE: "-g"
  <<: *build_ind_test

# 'hello_world-tex' case build variables
Build 'hello_world-tex' case:
  variables:
    BUILD_TEST_NAME: "hello_world-tex"
    BUILD_TEST_RUNTYPE: "-g"
  <<: *build_ind_test

# 'plots' case build variables
Build 'plots' case:
  variables:
    BUILD_TEST_NAME: "plots"
    BUILD_TEST_RUNTYPE: "-g"
  <<: *build_ind_test

# 'sver' case build variables
Build 'sver' case:
  variables:
    BUILD_TEST_NAME: "sver"
    BUILD_TEST_RUNTYPE: "-g"
  <<: *build_ind_test

# 'tables' case build variables
Build 'tables' case:
  variables:
    BUILD_TEST_NAME: "tables"
    BUILD_TEST_RUNTYPE: "-g"
  <<: *build_ind_test


#################################################
########### Compare generated reports ###########
#################################################

# Job templates to compare reports generated by individual tests
.tpl_compare_individual_test_pdf: &compare_ind_test_pdf
  image: nganalytics/nga:compare-builds
  stage: compare-individual-test-pdf
  script:
    - echo "==================== [${COMPARE_TEST_NAME}] Compare results ===================="
    - |
      if [ "$COMPARE_EXPLORATOR_OUTPUT" == "true" ]; then
        echo "---------- Explorator outputs ----------"
        diff ${COMPARE_TEST_GENERATED_PATH}/${COMPARE_TEST_CONF_FILE_NAME} ${COMPARE_TEST_EXPECTED_PATH}/${COMPARE_TEST_CONF_FILE_NAME} -I "${LINE_TO_IGNORE}"
      fi
    - |
      if [ "$COMPARE_TEX_OUTPUT" == "true" ]; then
        echo "---------- Explorator outputs ----------"
        sdiff ${COMPARE_TEST_GENERATED_PATH}/${COMPARE_TEST_TEX_FILE_NAME} ${COMPARE_TEST_EXPECTED_PATH}/${COMPARE_TEST_TEX_FILE_NAME} -I "${LINE_TO_IGNORE}"
      fi
    - |
      if [ "$COMPARE_PDF_OUTPUT" == "true" ]; then
        echo "---------- LaTeX reports ----------"
        echo "GENERATED"
        ls -al ${COMPARE_TEST_GENERATED_PATH}
        echo "EXPECTED"
        ls -al ${COMPARE_TEST_EXPECTED_PATH}
        echo "---------- Compare generated images ----------"
        python3 utils/pdf_comparison.py -r ${COMPARE_TEST_PAGE_RANGE} -e ${COMPARE_TEST_EXPECTED_PATH} -g ${COMPARE_TEST_GENERATED_PATH} -f ${COMPARE_TEST_REPORT_NAME}
      fi
  allow_failure: true
  rules:
#   Always run when pushing a release candidate
    - if: $CI_COMMIT_REF_NAME =~ /^\d{1,}\.\d{1,}\.\d{1,}-RC\d{1,}/
    - changes:
      - arg/Aggregation/*
      - arg/Applications/*
      - arg/Backend/*
      - arg/Common/*
      - arg/DataInterface/*
      - arg/Generation/*
      - arg/Tools/*
      - arg/__init__.py
      - arg/__version__.py
      - tests/build_tests/**/*
      - .gitlab/**/*
      - utils/**/*

# 'can' case comparison variables
Compare pdf 'can' case:
  needs: ["Build 'can' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "false"
    COMPARE_PDF_OUTPUT: "true"
    COMPARE_TEST_NAME: "can"
    COMPARE_TEST_PAGE_RANGE: "2-16"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_REPORT_NAME: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX.pdf"
  <<: *compare_ind_test_pdf

# 'can' case comparison variables
Compare pdf 'color_tables' case:
  needs: ["Build 'color_tables' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "false"
    COMPARE_PDF_OUTPUT: "true"
    COMPARE_TEST_NAME: "color_tables"
    COMPARE_TEST_PAGE_RANGE: "2-8"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_REPORT_NAME: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX.pdf"
  <<: *compare_ind_test_pdf

# 'crush' case comparison variables
Compare pdf 'crush' case:
  needs: ["Build 'crush' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "true"
    COMPARE_PDF_OUTPUT: "true"
    COMPARE_TEST_NAME: "crush"
    COMPARE_TEST_PAGE_RANGE: "2-43"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_REPORT_NAME: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX.pdf"
    COMPARE_TEST_CONF_FILE_NAME: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX.yml"
    LINE_TO_IGNORE: "ARG version"
  <<: *compare_ind_test_pdf

# 'crush-E' case comparison variables
Compare pdf 'crush-E' case:
  needs: ["Build 'crush-E' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "true"
    COMPARE_PDF_OUTPUT: "false"
    COMPARE_TEST_NAME: "crush-E"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_CONF_FILE_NAME: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX.yml"
    LINE_TO_IGNORE: "ARG version"
  <<: *compare_ind_test_pdf

# 'disk' case comparison variables
Compare pdf 'disk' case:
  needs: ["Build 'disk' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "false"
    COMPARE_PDF_OUTPUT: "true"
    COMPARE_TEST_NAME: "disk"
    COMPARE_TEST_PAGE_RANGE: "2-12"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_REPORT_NAME: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX.pdf"
  <<: *compare_ind_test_pdf

# 'hello_world' case comparison variables
Compare pdf 'hello_world' case:
  needs: ["Build 'hello_world' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "false"
    COMPARE_PDF_OUTPUT: "true"
    COMPARE_TEST_NAME: "hello_world"
    COMPARE_TEST_PAGE_RANGE: "2-7"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_REPORT_NAME: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX.pdf"
  <<: *compare_ind_test_pdf

# 'hello_world-tex' case comparison variables
Compare pdf 'hello_world-tex' case:
  needs: ["Build 'hello_world-tex' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "false"
    COMPARE_PDF_OUTPUT: "false"
    COMPARE_TEX_OUTPUT: "true"
    COMPARE_TEST_NAME: "hello_world-tex"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_TEX_FILE_NAME: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX.tex"
    LINE_TO_IGNORE: "This document was generated on"
  <<: *compare_ind_test_pdf

# 'plots' case comparison variables
Compare pdf 'plots' case:
  needs: ["Build 'plots' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "false"
    COMPARE_PDF_OUTPUT: "true"
    COMPARE_TEST_NAME: "plots"
    COMPARE_TEST_PAGE_RANGE: "2-9"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_REPORT_NAME: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX.pdf"
  <<: *compare_ind_test_pdf

# 'sver' case comparison variables
Compare pdf 'sver' case:
  needs: ["Build 'sver' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "false"
    COMPARE_PDF_OUTPUT: "true"
    COMPARE_TEST_NAME: "sver"
    COMPARE_TEST_PAGE_RANGE: "2-20"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_REPORT_NAME: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX.pdf"
  <<: *compare_ind_test_pdf

# 'tables' case comparison variables
Compare pdf 'tables' case:
  needs: ["Build 'tables' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "false"
    COMPARE_PDF_OUTPUT: "true"
    COMPARE_TEST_NAME: "tables"
    COMPARE_TEST_PAGE_RANGE: "2-7"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_REPORT_NAME: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX.pdf"
  <<: *compare_ind_test_pdf


# Job templates to compare reports generated by individual tests
.tpl_compare_individual_test_word: &compare_ind_test_word
  image: nganalytics/nga:compare-builds
  stage: compare-individual-test-word
  script:
    - echo "==================== [${COMPARE_TEST_NAME}] Compare results ===================="
    - |
      if [ "$COMPARE_EXPLORATOR_OUTPUT" == "true" ]; then
        echo "---------- Explorator outputs ----------"
        diff ${COMPARE_TEST_GENERATED_PATH}/${COMPARE_TEST_CONF_FILE_NAME} ${COMPARE_TEST_EXPECTED_PATH}/${COMPARE_TEST_CONF_FILE_NAME} -I "${LINE_TO_IGNORE}"
      fi
    - |
      if [ "$COMPARE_WORD_OUTPUT" == "true" ]; then
        echo "---------- Word reports ----------"
        echo "GENERATED"
        libreoffice --headless --convert-to pdf ${COMPARE_TEST_GENERATED_PATH_WORD}/${COMPARE_TEST_NAME_TO_CONVERT} --outdir $(pwd)/${COMPARE_TEST_GENERATED_PATH_WORD}
        ls -al ${COMPARE_TEST_GENERATED_PATH_WORD}
        echo "EXPECTED"
        libreoffice --headless --convert-to pdf ${COMPARE_TEST_EXPECTED_PATH}/${COMPARE_TEST_NAME_TO_CONVERT} --outdir $(pwd)/${COMPARE_TEST_EXPECTED_PATH}
        ls -al ${COMPARE_TEST_EXPECTED_PATH}
        echo "---------- Compare generated images ----------"
        python3 utils/pdf_comparison.py -r ${COMPARE_TEST_PAGE_RANGE} -e ${COMPARE_TEST_EXPECTED_PATH} -g ${COMPARE_TEST_GENERATED_PATH_WORD} -f ${COMPARE_TEST_REPORT_NAME_WORD}
      fi
  allow_failure: true
  rules:
#   Always run when pushing a release candidate
    - if: $CI_COMMIT_REF_NAME =~ /^\d{1,}\.\d{1,}\.\d{1,}-RC\d{1,}/
    - changes:
      - arg/Aggregation/*
      - arg/Applications/*
      - arg/Backend/*
      - arg/Common/*
      - arg/DataInterface/*
      - arg/Generation/*
      - arg/Tools/*
      - arg/__init__.py
      - arg/__version__.py
      - tests/build_tests/**/*
      - .gitlab/**/*
      - utils/**/*
      
# 'can' case comparison variables
Compare word 'can' case:
  needs: ["Build 'can' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "false"
    COMPARE_WORD_OUTPUT: "true"
    COMPARE_TEST_NAME: "can"
    COMPARE_TEST_PAGE_RANGE: "3-15"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_GENERATED_PATH_WORD: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word"
    COMPARE_TEST_REPORT_NAME_WORD: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word.pdf"
    COMPARE_TEST_NAME_TO_CONVERT: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word.docx"
  <<: *compare_ind_test_word

# 'can' case comparison variables
Compare word 'color_tables' case:
  needs: ["Build 'color_tables' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "false"
    COMPARE_WORD_OUTPUT: "true"
    COMPARE_TEST_NAME: "color_tables"
    COMPARE_TEST_PAGE_RANGE: "3-10"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_GENERATED_PATH_WORD: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word"
    COMPARE_TEST_REPORT_NAME_WORD: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word.pdf"
    COMPARE_TEST_NAME_TO_CONVERT: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word.docx"
  <<: *compare_ind_test_word

# 'crush' case comparison variables
Compare word 'crush' case:
  needs: ["Build 'crush' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "true"
    COMPARE_WORD_OUTPUT: "true"
    COMPARE_TEST_NAME: "crush"
    COMPARE_TEST_PAGE_RANGE: "3-39"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_GENERATED_PATH_WORD: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word"
    COMPARE_TEST_CONF_FILE_NAME: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX.yml"
    COMPARE_TEST_REPORT_NAME_WORD: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word.pdf"
    COMPARE_TEST_NAME_TO_CONVERT: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word.docx"
    LINE_TO_IGNORE: "ARG version"
  <<: *compare_ind_test_word

# 'crush-E' case comparison variables
Compare word 'crush-E' case:
  needs: ["Build 'crush-E' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "true"
    COMPARE_WORD_OUTPUT: "false"
    COMPARE_TEST_NAME: "crush-E"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_GENERATED_PATH_WORD: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word"
    COMPARE_TEST_CONF_FILE_NAME: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX.yml"
    LINE_TO_IGNORE: "ARG version"
  <<: *compare_ind_test_word

# 'disk' case comparison variables
Compare word 'disk' case:
  needs: ["Build 'disk' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "false"
    COMPARE_WORD_OUTPUT: "true"
    COMPARE_TEST_NAME: "disk"
    COMPARE_TEST_PAGE_RANGE: "3-13"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_GENERATED_PATH_WORD: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word"
    COMPARE_TEST_REPORT_NAME_WORD: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word.pdf"
    COMPARE_TEST_NAME_TO_CONVERT: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word.docx"
  <<: *compare_ind_test_word

# 'hello_world' case comparison variables
Compare word 'hello_world' case:
  needs: ["Build 'hello_world' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "false"
    COMPARE_WORD_OUTPUT: "true"
    COMPARE_TEST_NAME: "hello_world"
    COMPARE_TEST_PAGE_RANGE: "3-10"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_GENERATED_PATH_WORD: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word"
    COMPARE_TEST_REPORT_NAME_WORD: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word.pdf"
    COMPARE_TEST_NAME_TO_CONVERT: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word.docx"
  <<: *compare_ind_test_word

# 'plots' case comparison variables
Compare word 'plots' case:
  needs: ["Build 'plots' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "false"
    COMPARE_WORD_OUTPUT: "true"
    COMPARE_TEST_NAME: "plots"
    COMPARE_TEST_PAGE_RANGE: "3-8"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_GENERATED_PATH_WORD: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word"
    COMPARE_TEST_REPORT_NAME_WORD: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word.pdf"
    COMPARE_TEST_NAME_TO_CONVERT: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word.docx"
  <<: *compare_ind_test_word

# 'sver' case comparison variables
Compare word 'sver' case:
  needs: ["Build 'sver' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "false"
    COMPARE_WORD_OUTPUT: "true"
    COMPARE_TEST_NAME: "sver"
    COMPARE_TEST_PAGE_RANGE: "3-18"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_GENERATED_PATH_WORD: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word"
    COMPARE_TEST_REPORT_NAME_WORD: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word.pdf"
    COMPARE_TEST_NAME_TO_CONVERT: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word.docx"
  <<: *compare_ind_test_word

# 'tables' case comparison variables
Compare word 'tables' case:
  needs: ["Build 'tables' case"]
  variables:
    COMPARE_EXPLORATOR_OUTPUT: "false"
    COMPARE_WORD_OUTPUT: "true"
    COMPARE_TEST_NAME: "tables"
    COMPARE_TEST_PAGE_RANGE: "3-8"
    COMPARE_TEST_EXPECTED_PATH: "tests/${BUILD_TESTS}/${COMPARE_TEST_NAME}/expected"
    COMPARE_TEST_GENERATED_PATH: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-LaTeX"
    COMPARE_TEST_GENERATED_PATH_WORD: "tests/${DEFAULT_OS}/${BUILD_TESTS}/${COMPARE_TEST_NAME}/${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word"
    COMPARE_TEST_REPORT_NAME_WORD: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word.pdf"
    COMPARE_TEST_NAME_TO_CONVERT: "${BUILD_TESTS}-${COMPARE_TEST_NAME}-Report-Word.docx"
  <<: *compare_ind_test_word


###########################
####### Package stage #####
###########################

#Package pyARG-dep for pypi
Package pyARG-dep:
  image: python:3.7-slim
  stage: package
  needs: []
  variables:
    DEPLOYMENT_PYPI_SRC: ".gitlab/deployment/pypi/pyARG-dep"
    PACKAGING_PATH: "package-pyARG-dep"
  before_script:
    - echo "========== Getting Packaging dependencies ==========="
    - pip install --upgrade pip
    - pip install wheel
    - pip install twine
  script:
    - echo "==================== Build pyARG ===================="
    - mkdir $PACKAGING_PATH/
    - cp $DEPLOYMENT_PYPI_SRC/* $PACKAGING_PATH/
    - cp requirements.txt $PACKAGING_PATH/
    - ls -al $PACKAGING_PATH/
    - cd $PACKAGING_PATH
    - python setup.py sdist bdist_wheel
    - twine check dist/*
  artifacts:
    expire_in: 7 days
    expose_as: "pyARG-dep wheel package"
    name: "pyARG-dep"
    paths:
      - $PACKAGING_PATH/
  rules:
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'
      changes:
        - .gitlab/deployment/pypi/pyARG-dep/*
        - requirements.txt

#Package pyARG for pypi
Package pyARG:
  image: python:3.7-slim
  stage: package
  variables:
    DEPLOYMENT_PYPI_SRC: ".gitlab/deployment/pypi/pyARG"
    PACKAGING_PATH: "package"
  before_script:
    - echo "========== Getting Packaging dependencies ==========="
    - pip install --upgrade pip
    - pip install wheel
    - pip install twine
  script:
    - echo "==================== Build pyARG ===================="
    - mkdir $PACKAGING_PATH/
    - cp $DEPLOYMENT_PYPI_SRC/* $PACKAGING_PATH/
    - cp LICENSE $PACKAGING_PATH/
    - cp README.md $PACKAGING_PATH/
    - cp -R arg/ $PACKAGING_PATH/arg/
    - ls -al $PACKAGING_PATH/
    - cd $PACKAGING_PATH
    - python setup.py sdist bdist_wheel
    - twine check dist/*
  artifacts:
    expire_in: 7 days
    expose_as: "pyARG wheel package"
    name: "pyARG"
    paths:
      - $PACKAGING_PATH/
  rules:
    - if: $CI_COMMIT_TAG

#####################################
########## Global Settings ##########
#####################################

# Optimizing Docker image loading
# https://docs.gitlab.com/ce/ci/docker/using_docker_build.html#using-the-overlayfs-driver
include:
  - template: Code-Quality.gitlab-ci.yml
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: License-Scanning.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml
  - template: Secret-Detection.gitlab-ci.yml
  - local: "/.gitlab/templates/build-tests-GA-EA.yml"
  - local: "/.gitlab/templates/gui-tests.yml"
  - local: "/.gitlab/templates/distributions-tests.yml"
  - local: "/.gitlab/templates/package.yml"
  - local: "/.gitlab/templates/deploy.yml"
  - local: "/.gitlab/templates/docs.yml"
  - local: "/.gitlab/templates/git-bot.yml"

variables:
  DOCKER_DRIVER: overlay2
  DEFAULT_OS: "Debian"
  BUILD_TESTS: "build_tests"
  BUILD_TEST_PATH: "tests/${BUILD_TESTS}"
  GUI_TESTS: "GUI_tests"
  ERR_PDF_FILE: "${BUILD_TEST_NAME}/build_tests-${BUILD_TEST_NAME}-Report-LaTeX/ARG.err"
  ERR_DOCX_FILE: "${BUILD_TEST_NAME}/build_tests-${BUILD_TEST_NAME}-Report-Word/ARG.err"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
# SECURE_LOG_LEVEL: "debug"

# Stages definition
stages:
  - test
  - gui-test
  - build-individual-test
  - compare-individual-test-pdf
  - compare-individual-test-word
  - test-distributions
  - check-package
  - package
  - deploy
  - doc
  - git-bot

# Workaround for Gitlab issue generating a detached pipeline for "rules" "if" "manual" jobs
workflow:
  rules:
    - if: '$CI_MERGE_REQUEST_EVENT_TYPE != "detached"'

.with_python_cache:
  cache:
    paths:
      - .cache/pip
      - venv/

Python Static Scan:
  extends: .with_python_cache
  image: python:slim-buster
  stage: test
  before_script:
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
    - pip install pylint anybadge
  script:
    - mkdir ./pylint
    - pylint --reports y --exit-zero arg tests | tee ./pylint/pylint.txt
    - PYLINT_SCORE=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' ./pylint/pylint.txt)
    - anybadge --label=Pylint --file=pylint/pylint.svg --value=$PYLINT_SCORE 2=red 4=orange 8=yellow 10=green
  artifacts:
    expire_in: 1 week
    expose_as: "PyLint Report"
    paths:
      - pylint/

# Custom spotbugs sast for Java projects
spotbugs-sast:
  stage: test
  extends: []
  needs: []
  image: maven:3.5.4-jdk-8
  script:
    - cd rcp/src/io.arg.webgui/
    - echo "Verifying arg rcp plugin"
    - mvn clean verify -DskipTests
  artifacts:
    reports:
      sast: rcp/src/io.arg.webgui/bundles/io.arg.webgui.plugin/target/spotbugsXml.xml

    